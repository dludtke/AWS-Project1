AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy Network and Security Groups for Project 2
# This should be all the basic sections needed in Project #2
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: VPC-Project2

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: IGW-Project2

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1a
        #Fn::Select:
        #- '0'
        #- Fn::GetAZs: ''
      Tags:
      - Key: Name
        Value: PubSub1-Project2

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: us-east-1b
        #Fn::Select:
        #- '1'
        #- Fn::GetAZs: ''
      Tags:
      - Key: Name
        Value: PubSub2-Project2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: us-east-1a
        #Fn::Select:
        #- '0'
        #- Fn::GetAZs: ''
      Tags:
      - Key: Name
        Value: PriSub1-Project2

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: us-east-1b
        #Fn::Select:
        #- '1'
        #- Fn::GetAZs: ''
      Tags:
      - Key: Name
        Value: PriSub2-Project2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: PubRT-Project2

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow all http traffic to load balancer
      GroupName: ALBSG-Project2
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: 
        Ref: VPC

  WebInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for web instances on private subnets
      VpcId: 
        Ref: VPC

  WebInstanceSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
        GroupId: 
          Ref: WebInstanceSecurityGroup
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId

  NATSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for NAT instance on public subnet
      VpcId: 
        Ref: VPC

  NATSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
        GroupId: 
          Ref: NATSecurityGroup
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId

  BastionHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for the bastion host on public subnet
      VpcId: 
        Ref: VPC

  BastionHostSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
        GroupId: 
          Ref: BastionHostSecurityGroup
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId

Outputs:
# This is an example of the complete YAML code for outputting the VPC information and also exporting the VPC ID for use
# by another template
  VPC:
    Description: VPC for Project2
    Value:
      Ref: VPC
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-VPCId"

  PrivateSubnet1:
    Description: PrivateSubnet1 for Project2
    Value:
      Ref: PrivateSubnet1
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PriSub1"

  PrivateSubnet2:
    Description: PrivateSubnet2 for Project2
    Value:
      Ref: PrivateSubnet2
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PriSub2"

  PublicSubnet1:
    Description: PublicSubnet1 for Project2
    Value:
      Ref: PublicSubnet1
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PubSub1"

  PublicSubnet2:
    Description: PublicSubnet2 for Project2
    Value:
      Ref: PublicSubnet2
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PubSub2"

  WebInstanceSecurityGroup:
    Description: Web Instance Security Group for Project2
    Value:
      Ref: WebInstanceSecurityGroup
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-WebInsSG"

  ALBSecurityGroup:
    Description: Load Balancer Security Group for Project2
    Value:
      Fn::GetAtt:
      - ALBSecurityGroup
      - GroupId
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ALBSG"
  NATSecurityGroup:
    Description: NAT Instance Security Group for Project2
    Value:
      Fn::GetAtt:
      - NATSecurityGroup
      - GroupId
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-NATSG"
  BastionHostSecurityGroup:
    Description: Bastion Host Instance Security Group for Project2
    Value:
      Fn::GetAtt:
      - BastionHostSecurityGroup
      - GroupId
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-BastionSG"
